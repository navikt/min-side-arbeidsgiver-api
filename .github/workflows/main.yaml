name: Test, bygg, deploy
on:
  push:
  workflow_dispatch:

env:
  IMAGE_BASE: ghcr.io/${{ github.repository }}/min-side-arbeidsgiver-api
  IMAGE: ghcr.io/${{ github.repository }}/min-side-arbeidsgiver-api:${{ github.sha }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12.10
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 17

      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - run: mvn -B -Dsurefire.useFile=false test

  bygg:
    name: Bygg
    needs: test
    ### VALG AV DEV-BRANCH SETTES HER:
    if: needs.test.result == 'success' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/java17')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: 17

    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - run: mvn -B -DskipTests package

    - uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: |
          ${{ env.IMAGE }}
          ${{ env.IMAGE_BASE }}:latest
        cache-from: type=registry,ref=${{ env.IMAGE_BASE }}:latest
        cache-to: type=inline

  deploy-dev-gcp:
    name: Deploy to dev-gcp
    needs: bygg
    if: needs.bygg.result == 'success'
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          VAR: image=${{ env.IMAGE }}
          RESOURCE: nais/dev-gcp.yaml

  deploy-labs-gcp:
    name: Deploy to labs-gcp
    needs: bygg
    if: needs.bygg.result == 'success' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: labs-gcp
          VAR: image=${{ env.IMAGE }}
          RESOURCE: nais/labs-gcp.yaml

  deploy-prod-gcp:
    name: Deploy to prod-gcp
    needs: deploy-dev-gcp
    if: needs.deploy-dev-gcp.result == 'success' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          VAR: image=${{ env.IMAGE }}
          RESOURCE: nais/prod-gcp.yaml

