name: Test, bygg, deploy
on:
  push:
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12.10
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 2345:5432
    steps:
      - uses: actions/checkout@v3
      - run: PGPASSWORD=postgres psql -U postgres -h localhost -p 2345 -f ./local-db-init.sql
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
          cache: maven

      - run: mvn -B -Dsurefire.useFile=false test

  bygg:
    name: Bygg
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: 17
        cache: maven

    - run: mvn -B -DskipTests package

    - uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - uses: nais/docker-build-push@v0
      id: gar-push
      with:
        team: fager
        tag: ${{ github.sha }}
        project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
        identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}

  deploy-dev-gcp:
    permissions:
      contents: "read"
      id-token: "write"
    name: Deploy dev (dev-gcp)
    needs: bygg
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      - uses: nais/login@v0
        id: login
        with:
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          team: fager
      - uses: nais/deploy/actions/deploy@v1
        env:
          IMAGE: ${{ steps.login.outputs.registry }}/min-side-arbeidsgiver-api:${{ github.sha }}
          RESOURCE: nais/dev-env.yaml
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp

  deploy-prod-gcp:
    permissions:
      contents: "read"
      id-token: "write"
    name: Deploy prod (prod-gcp)
    needs: deploy-dev-gcp
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/login@v0
        id: login
        with:
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          team: fager
      - uses: nais/deploy/actions/deploy@v1
        env:
          IMAGE: ${{ steps.login.outputs.registry }}/min-side-arbeidsgiver-api:${{ github.sha }}
          RESOURCE: nais/prod-env.yaml
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp

