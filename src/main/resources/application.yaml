server:
  port: 8080
  servlet:
    context-path: /ditt-nav-arbeidsgiver-api

management.endpoints.web:
  exposure.include: info, health, metrics, prometheus
  base-path: /internal/actuator

spring:
  profiles:
    active: local

---

spring:
  config:
    activate:
      on-profile: local

nais.cluster.name: local

no.nav.security.jwt.issuer.selvbetjening:
  discoveryurl: http://metadata-selvbetjening
  accepted_audience: aud-localhost
  cookiename: localhost-idtoken

mock:
  enabled: true
  port: 8081
  aktorPort: 8082

sts:
  stsPass: "mockpass"
  stsUrl: "http://localhost:${mock.port}/sts"

aktorregister:
  aktorUrl: "http://localhost:${mock.port}/aktoerregister/api/v1/identer"

altinn:
  altinnHeader: "test"
  APIGwHeader: "test"
  proxyUrl: http://localhost:${mock.port}/altinn-rettigheter-proxy
  proxyFallbackUrl: http://localhost:${mock.port}/altinn

digisyfo:
  narmestelederUrl: "http://localhost:${mock.port}/arbeidsgiver/ansatte"

aad:
  aadAccessTokenURL: "http://localhost:${mock.port}/aad"

unleash:
  url: "https://unleash.herokuapp.com/api/"

token.x:
  clientId: "local"
  tokendingsUrl: "tokendingsUrl"
  audience: "local-client"

---

spring:
  config:
    activate:
      on-profile: labs

no.nav.security.jwt.issuer.selvbetjening:
  discoveryurl: http://min-side-ag-fakelogin/metadata?issuer=selvbetjening
  accepted_audience: aud-selvbetjening
  cookiename: selvbetjening-idtoken

mock:
  enabled: true
  port: 8081
  aktorPort: 8082

sts:
  stsPass: "mockpass"
  stsUrl: "http://localhost:${mock.port}/sts"

aktorregister:
  aktorUrl: "http://localhost:${mock.port}/aktoerregister/api/v1/identer"

altinn:
  altinnHeader: "test"
  APIGwHeader: "test"
  proxyUrl: http://localhost:${mock.port}/altinn-rettigheter-proxy
  proxyFallbackUrl: http://localhost:${mock.port}/altinn

digisyfo:
  narmestelederUrl: "http://localhost:${mock.port}/arbeidsgiver/ansatte"

aad:
  aadAccessTokenURL: "http://localhost:${mock.port}/aad"

unleash:
  url: "https://unleash.herokuapp.com/api/"

---
spring:
  config:
    activate:
      on-profile: dev-gcp

sts:
  stsPass: ${STS_PASS}
  stsUrl: https://security-token-service.nais.preprod.local/rest/v1/sts/token

no.nav.security.jwt.issuer.selvbetjening:
  discoveryurl: ${LOGINSERVICE_IDPORTEN_DISCOVERY_URL}
  accepted_audience: ${LOGINSERVICE_IDPORTEN_AUDIENCE}
  cookiename: selvbetjening-idtoken

altinn:
  altinnHeader: ${ALTINN_HEADER}
  APIGwHeader: ${APIGW_HEADER}
  proxyUrl: http://altinn-rettigheter-proxy/altinn-rettigheter-proxy
  proxyFallbackUrl: https://api-gw-q1.oera.no

unleash:
  url: https://unleash.nais.oera.no/api

yrkeskodeverk:
  yrkeskodeUrl: "https://kodeverk.nais.preprod.local/api/v1/kodeverk/Yrker/koder/betydninger?spraak=nb"

token.x:
  privateJwk: ${TOKEN_X_PRIVATE_JWK}
  clientId: ${TOKEN_X_CLIENT_ID}
  tokendingsUrl: "https://tokendings.dev-gcp.nais.io/token"
  audience: "dev-fss:arbeidsgiver:min-side-arbeidsgiver-fss-proxy"

digisyfo:
  narmestelederUrl: "https://narmesteleder.dev.nav.no/arbeidsgiver/ansatte"

---

spring:
  config:
    activate:
      on-profile: prod-gcp

no.nav.security.jwt.issuer.selvbetjening:
  discoveryurl: ${LOGINSERVICE_IDPORTEN_DISCOVERY_URL}
  accepted_audience: ${LOGINSERVICE_IDPORTEN_AUDIENCE}
  cookiename: selvbetjening-idtoken

altinn:
  altinnHeader: ${ALTINN_HEADER}
  APIGwHeader: ${APIGW_HEADER}
  proxyUrl: http://altinn-rettigheter-proxy/altinn-rettigheter-proxy
  proxyFallbackUrl: https://api-gw.oera.no

unleash:
  url: https://unleash.nais.adeo.no/api

yrkeskodeverk:
  yrkeskodeUrl: "https://kodeverk.nais.prod.local/api/v1/kodeverk/Yrker/koder/betydninger?spraak=nb"

token.x:
  privateJwk: ${TOKEN_X_PRIVATE_JWK}
  clientId: ${TOKEN_X_CLIENT_ID}
  tokendingsUrl: "https://tokendings.prod-gcp.nais.io/token"
  audience: "prod-fss:arbeidsgiver:min-side-arbeidsgiver-fss-proxy"

digisyfo:
  narmestelederUrl: "https://narmesteleder.nav.no/arbeidsgiver/ansatte"
